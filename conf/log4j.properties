# 定义日志目录变量，引用使用 ${logdir}
# logdir=directory.of.log

# logger filter
# https://www.cnblogs.com/yulinlewis/p/10152875.html
# Filter 一般是以链式组织的，每个Filter都有一个next属性可设置
# DenyAllFilter LevelMatchFilter LevelRangeFilter StringMatchFilter


host=192.168.2.100

### set log levels ###
log4j.rootLogger= DEBUG,stdout,D

### 输出到控制台 ###
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target=System.out
log4j.appender.stdout.Threshold=DEBUG
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=host:${host} %c - %m%n
log4j.appender.stdout.filter.f1=org.apache.log4j.varia.LevelMatchFilter
log4j.appender.stdout.filter.f1.LevelToMatch=INFO
log4j.appender.stdout.filter.f1.AcceptOnMatch=true
log4j.appender.stdout.filter.f2=org.apache.log4j.varia.DenyAllFilter

#log4j.appender.stdout.layout.ConversionPattern=%-d{yyyy-MM-dd HH:mm:ss} [%X{user}] [%-5p] %c - %m%n
# %X{key} MDC 属性获取
# %c logger name
# %C 类的全路径
# %-5p 长度最小5位，左对齐
# %M method 方法名
# %m message 日志消息
# %n 换行
# %F 所属的文件
# %l 相当于 %C.%M(%F:%L),如 log.demo.basic.BasicLog4JDemo.logForComponents(BasicLog4JDemo.java:78)

### 输出到日志文件 ###
log4j.appender.D=org.apache.log4j.DailyRollingFileAppender
log4j.appender.D.File=logs/log.log
log4j.appender.D.Encoding=UTF-8
log4j.appender.D.Append=true
log4j.appender.D.Threshold=INFO
log4j.appender.D.ImmediateFlush=true
# 控制何时进行日志rolling以及开始新的日志文件
log4j.appender.D.DatePattern='.' yyyy-MM-dd	
log4j.appender.D.layout=org.apache.log4j.PatternLayout
log4j.appender.D.layout.ConversionPattern=%-d{yyyy-MM-dd HH:mm:ss} [%-5p] %m%n

# RollingFileAppender 配置
# log4j.appender.D.MaxFileSize=1KB
# log4j.appender.D.MaxBackupIndex=2


# 为name为service的logger设置日志级别及appender
log4j.logger.service=INFO,S
log4j.appender.S=org.apache.log4j.FileAppender
log4j.appender.S.File=logs/service.log
log4j.appender.S.Encoding=UTF-8
log4j.appender.S.Append=true
log4j.appender.S.Threshold=INFO
log4j.appender.S.ImmediateFlush=true
log4j.appender.S.layout=org.apache.log4j.PatternLayout
log4j.appender.S.layout.ConversionPattern=%-d{yyyy-MM-dd HH:mm:ss} [%-5p] %m%n


# 为name为viewer的logger设置日志级别及appender
log4j.logger.viewer=INFO,V
log4j.appender.V=org.apache.log4j.FileAppender
log4j.appender.V.File=logs/viewer.log
log4j.appender.V.Encoding=UTF-8
log4j.appender.V.Append=true
#
# 为该appender设置要处理的日志级别，级别低于INFO的日志信息不会被该appender处理
# 但是由于该logger的级别设置为INFO,所以INFO级别及以上的消息还是会沿着Logger层级向上传递，而不论root logger设置的级别,
# 最终是否在root logger的appender中输出主要取决于root logger的某个appender的Threshold设置的日志级别
#
log4j.appender.V.Threshold=INFO
log4j.appender.V.ImmediateFlush=true
log4j.appender.V.layout=org.apache.log4j.PatternLayout
log4j.appender.V.layout.ConversionPattern=%-d{yyyy-MM-dd HH:mm:ss} [%-5p] %m%n

